{"version":3,"file":"component---src-pages-archive-view-tsx-d0eed235e9f2b5a9c65e.js","mappings":"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","sources":["webpack://my-gatsby-site/./src/components/archive/LightboxViewer.tsx","webpack://my-gatsby-site/./src/pages/archive-view.tsx"],"sourcesContent":["import React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport { useArchiveData } from './useArchiveData';\nimport { ArchiveItem } from './types';\nimport { withPrefix } from '../utils';\nimport './lightbox.css';\n\nexport function LightboxViewer() {\n  const { allItems } = useArchiveData();\n  \n  // Filter to only image and video items\n  const viewableItems = useMemo(() => {\n    return allItems.filter(item => \n      item.type === 'file' && (item.fileType === 'image' || item.fileType === 'video')\n    );\n  }, [allItems]);\n\n  const [currentPath, setCurrentPath] = useState<string | null>(null);\n  const [controlsVisible, setControlsVisible] = useState(true);\n\n  // Read hash on mount and when it changes\n  useEffect(() => {\n    const readHash = () => {\n      if (typeof window === 'undefined') return;\n      const hash = window.location.hash;\n      const match = hash.match(/#view=(.+)/);\n      if (match) {\n        const path = decodeURIComponent(match[1]);\n        setCurrentPath(path);\n      } else {\n        setCurrentPath(null);\n      }\n    };\n\n    readHash();\n    window.addEventListener('hashchange', readHash);\n    return () => window.removeEventListener('hashchange', readHash);\n  }, []);\n\n  const currentIndex = useMemo(() => {\n    if (!currentPath) return -1;\n    return viewableItems.findIndex(item => item.path === currentPath);\n  }, [currentPath, viewableItems]);\n\n  const currentItem = currentIndex >= 0 ? viewableItems[currentIndex] : null;\n\n  const navigateTo = useCallback((index: number) => {\n    if (index < 0 || index >= viewableItems.length) return;\n    const item = viewableItems[index];\n    const encodedPath = encodeURIComponent(item.path);\n    // Use replaceState to avoid polluting history\n    window.history.replaceState(null, '', `#view=${encodedPath}`);\n    setCurrentPath(item.path);\n  }, [viewableItems]);\n\n  const navigatePrev = useCallback(() => {\n    if (currentIndex > 0) {\n      navigateTo(currentIndex - 1);\n      setControlsVisible(false);\n    }\n  }, [currentIndex, navigateTo]);\n\n  const navigateNext = useCallback(() => {\n    if (currentIndex < viewableItems.length - 1) {\n      navigateTo(currentIndex + 1);\n      setControlsVisible(false);\n    }\n  }, [currentIndex, viewableItems.length, navigateTo]);\n\n  const close = useCallback(() => {\n    // Close the window/tab\n    window.close();\n  }, []);\n\n  // Keyboard navigation\n  useEffect(() => {\n    if (!currentItem) return;\n\n    const handleKeyDown = (e: KeyboardEvent) => {\n      if (e.key === 'ArrowLeft') {\n        e.preventDefault();\n        navigatePrev();\n      } else if (e.key === 'ArrowRight') {\n        e.preventDefault();\n        navigateNext();\n      } else if (e.key === 'Escape') {\n        e.preventDefault();\n        close();\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n    return () => window.removeEventListener('keydown', handleKeyDown);\n  }, [currentItem, navigatePrev, navigateNext, close]);\n\n  // Show controls on mouse movement\n  useEffect(() => {\n    const handleMouseMove = () => {\n      setControlsVisible(true);\n    };\n\n    window.addEventListener('mousemove', handleMouseMove);\n    return () => window.removeEventListener('mousemove', handleMouseMove);\n  }, []);\n\n  if (!currentItem) return null;\n\n  const canGoPrev = currentIndex > 0;\n  const canGoNext = currentIndex < viewableItems.length - 1;\n\n  return (\n    <div className={`lightbox-overlay ${controlsVisible ? '' : 'cursor-hidden'}`}>\n      <div className=\"lightbox-content\">\n        {currentItem.fileType === 'video' ? (\n          <video\n            key={currentItem.path}\n            src={withPrefix('archive/' + currentItem.path)}\n            autoPlay\n            loop\n            muted\n            playsInline\n            className=\"lightbox-media\"\n          />\n        ) : (\n          <img\n            key={currentItem.path}\n            src={withPrefix('archive/' + currentItem.path)}\n            alt={currentItem.name}\n            className=\"lightbox-media\"\n          />\n        )}\n      </div>\n\n      <div className={`lightbox-controls ${controlsVisible ? 'visible' : 'hidden'}`}>\n        <div className=\"lightbox-gradient\" />\n        <div className=\"lightbox-label\">{currentItem.name}</div>\n        <div className=\"lightbox-buttons\">\n          <button\n            className=\"lightbox-button lightbox-button-prev\"\n            onClick={navigatePrev}\n            disabled={!canGoPrev}\n            aria-label=\"Previous\"\n          >\n            <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n              <polyline points=\"15 18 9 12 15 6\"></polyline>\n            </svg>\n          </button>\n          <button\n            className=\"lightbox-button lightbox-button-close\"\n            onClick={close}\n            aria-label=\"Close\"\n          >\n            <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n              <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line>\n              <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line>\n            </svg>\n          </button>\n          <button\n            className=\"lightbox-button lightbox-button-next\"\n            onClick={navigateNext}\n            disabled={!canGoNext}\n            aria-label=\"Next\"\n          >\n            <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n              <polyline points=\"9 18 15 12 9 6\"></polyline>\n            </svg>\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\n","import React from 'react';\nimport { LightboxViewer } from '../components/archive/LightboxViewer';\n\n// Dedicated page for viewing archive items in a lightbox\nexport default function ArchiveViewPage() {\n  return <LightboxViewer />;\n}\n\n// Disable the default layout wrapper\nexport const Head = () => (\n  <>\n    <title>Archive Viewer</title>\n    <meta name=\"robots\" content=\"noindex\" />\n    <style>{`\n      body {\n        margin: 0;\n        padding: 0;\n        overflow: hidden;\n      }\n    `}</style>\n  </>\n);\n\n"],"names":["LightboxViewer","allItems","useArchiveData","viewableItems","useMemo","filter","item","type","fileType","currentPath","setCurrentPath","useState","controlsVisible","setControlsVisible","useEffect","readHash","window","match","location","hash","path","decodeURIComponent","addEventListener","removeEventListener","currentIndex","findIndex","currentItem","navigateTo","useCallback","index","length","encodedPath","encodeURIComponent","history","replaceState","navigatePrev","navigateNext","close","handleKeyDown","e","key","preventDefault","handleMouseMove","canGoPrev","canGoNext","React","className","src","withPrefix","autoPlay","loop","muted","playsInline","alt","name","onClick","disabled","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","points","x1","y1","x2","y2","ArchiveViewPage","Head","content"],"sourceRoot":""}